num = 15
print(bin(num)) # бинарный (двоичный) код
print(oct(num)) # восьмеричный код
print(hex(num)) # шеснадцатиричный код

# ТИП ДАННЫХ str  СТРОКА

text = 'Hello World' # первый элемент в строке с инексом 0, пробел тоже полноправный символ с индексом
print(text[0])
print(text[-1]) # считаем с конца строки
# строки НЕ ИЗМЕНЯЕМЫЕ
print(text[1:3]) # питон не любит правую часть он возьмет индексы с 1 по 2, ( до 3-го не включительно)
print(text[:4]) # с 0 до 3 итого 4 элемента
print(text[4:]) # c 4 до конца
print(text[:8:2]) # до 8-го элемента с шагом 2
print(text[::-1]) # реверс слова, но строки не изменяемы на основе этого создается новая строка

txt = "Hello Python"  # конвертируем " в одинарные нажатием Alt + Enter

# методы

print(text.upper())  # в верхний регистр
print(text.lower()) # в нижний регистр
print(text.count('l')) # считает сколько символов/букв указаных
print(text.find('o')) # находит первую указаную букву и возвращает её индекс
print(text.replace('W', 'UUU')) # заменяет с 1 на 2
print(text.isdigit())


# ТИП ДАННЫХ      СПИСОК (list)

data = ['hello', 678, 66.9, 'tututu']

print(data)
print(data[::-1]) # можно ваполнять все действия по возврату элементов как и со строками
# в списках можно менять элементы, в отличии от строк
data[0] = 'замена'
print(data)

# методы, в отличии от строк методы изменяют сам список, а не создают новый

data.append('new!!!') # добовляет в конец спика новую строку
print(data)

# data.pop(1) # удаляет элемент из списка. но сам элемент не исчезает бесследно (по умолчанию последний номер списка)
a = data.pop(1)
print(data, a)

data.insert(2, 'теперь тут я, insert') # вставляет между элементами указаное значение, раздвигает строй
print(data)

data_1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9], ['hello', 'world']]
print(data_1[3][1][4]) # вывод 3-й строки, 1-го элемента, 4-го индекса